{"ast":null,"code":"import _toConsumableArray from\"/home/huy/Documents/todo-app---reactjs/todos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/home/huy/Documents/todo-app---reactjs/todos/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var initState={todoList:[],doneTodoList:[],optionValue:1};function rootReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"ADD_NEW_TODO\":return _objectSpread(_objectSpread({},state),{},{todoList:[].concat(_toConsumableArray(state.todoList),[action.payload.todo])});case\"TOGGLE_COMPLETE_BTN\":return _objectSpread(_objectSpread({},state),{},{todoList:state.todoList.map(function(item){if(item.id===action.payload.todoItem.id){return _objectSpread(_objectSpread({},item),{},{isComplete:!action.payload.todoItem.isComplete});}return item;})});case\"DELETE_TODO\":return _objectSpread(_objectSpread({},state),{},{todoList:state.todoList.filter(function(item){return item.id!==action.payload.todoId;}),doneTodoList:state.todoList.filter(function(item){return item.id!==action.payload.todoId&&item.isComplete===true;})});case\"CHOOSE_OPTIONS_VALUE\":return _objectSpread(_objectSpread({},state),{},{optionValue:action.payload.value});case\"UPDATE_TODO\":return _objectSpread(_objectSpread({},state),{},{doneTodoList:state.todoList.filter(function(item){return item.isComplete===true;})});default:return state;}}export default rootReducer;","map":{"version":3,"sources":["/home/huy/Documents/todo-app---reactjs/todos/src/store/rootReducer.js"],"names":["initState","todoList","doneTodoList","optionValue","rootReducer","state","action","type","payload","todo","map","item","id","todoItem","isComplete","filter","todoId","value"],"mappings":"6UAAA,GAAMA,CAAAA,SAAS,CAAG,CAChBC,QAAQ,CAAE,EADM,CAEhBC,YAAY,CAAE,EAFE,CAGhBC,WAAW,CAAE,CAHG,CAAlB,CAMA,QAASC,CAAAA,WAAT,EAAgD,IAA3BC,CAAAA,KAA2B,2DAAnBL,SAAmB,IAARM,CAAAA,MAAQ,2CAC9C,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,cAAL,CACE,sCACKF,KADL,MAEEJ,QAAQ,8BAAMI,KAAK,CAACJ,QAAZ,GAAsBK,MAAM,CAACE,OAAP,CAAeC,IAArC,EAFV,GAKF,IAAK,qBAAL,CACE,sCACKJ,KADL,MAEEJ,QAAQ,CAAEI,KAAK,CAACJ,QAAN,CAAeS,GAAf,CAAmB,SAACC,IAAD,CAAU,CACrC,GAAIA,IAAI,CAACC,EAAL,GAAYN,MAAM,CAACE,OAAP,CAAeK,QAAf,CAAwBD,EAAxC,CAA4C,CAC1C,sCACKD,IADL,MAEEG,UAAU,CAAE,CAACR,MAAM,CAACE,OAAP,CAAeK,QAAf,CAAwBC,UAFvC,GAID,CACD,MAAOH,CAAAA,IAAP,CACD,CARS,CAFZ,GAaF,IAAK,aAAL,CACE,sCACKN,KADL,MAEEJ,QAAQ,CAAEI,KAAK,CAACJ,QAAN,CAAec,MAAf,CACR,SAACJ,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYN,MAAM,CAACE,OAAP,CAAeQ,MAArC,EADQ,CAFZ,CAKEd,YAAY,CAAEG,KAAK,CAACJ,QAAN,CAAec,MAAf,CACZ,SAACJ,IAAD,QAAUA,CAAAA,IAAI,CAACC,EAAL,GAAYN,MAAM,CAACE,OAAP,CAAeQ,MAA3B,EAAqCL,IAAI,CAACG,UAAL,GAAoB,IAAnE,EADY,CALhB,GAUF,IAAK,sBAAL,CACE,sCACKT,KADL,MAEEF,WAAW,CAAEG,MAAM,CAACE,OAAP,CAAeS,KAF9B,GAKF,IAAK,aAAL,CACE,sCACKZ,KADL,MAEEH,YAAY,CAAEG,KAAK,CAACJ,QAAN,CAAec,MAAf,CAAsB,SAACJ,IAAD,QAAUA,CAAAA,IAAI,CAACG,UAAL,GAAoB,IAA9B,EAAtB,CAFhB,GAIF,QACE,MAAOT,CAAAA,KAAP,CA5CJ,CA8CD,CAED,cAAeD,CAAAA,WAAf","sourcesContent":["const initState = {\n  todoList: [],\n  doneTodoList: [],\n  optionValue: 1,\n};\n\nfunction rootReducer(state = initState, action) {\n  switch (action.type) {\n    case \"ADD_NEW_TODO\":\n      return {\n        ...state,\n        todoList: [...state.todoList, action.payload.todo],\n      };\n\n    case \"TOGGLE_COMPLETE_BTN\":\n      return {\n        ...state,\n        todoList: state.todoList.map((item) => {\n          if (item.id === action.payload.todoItem.id) {\n            return {\n              ...item,\n              isComplete: !action.payload.todoItem.isComplete,\n            };\n          }\n          return item;\n        }),\n      };\n\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todoList: state.todoList.filter(\n          (item) => item.id !== action.payload.todoId\n        ),\n        doneTodoList: state.todoList.filter(\n          (item) => item.id !== action.payload.todoId && item.isComplete === true\n        ),\n      };\n\n    case \"CHOOSE_OPTIONS_VALUE\":\n      return {\n        ...state,\n        optionValue: action.payload.value,\n      };\n\n    case \"UPDATE_TODO\":\n      return {\n        ...state,\n        doneTodoList: state.todoList.filter((item) => item.isComplete === true),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}