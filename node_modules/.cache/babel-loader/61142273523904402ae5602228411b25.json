{"ast":null,"code":"var _jsxFileName = \"/home/huy/Documents/todo-app---reactjs/todos/src/conponents/todo list/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./todolist.css\";\nimport TodoItem from \"../todo item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoList() {\n  _s();\n\n  const todoList = useSelector(state => state.todoList); // const doneTodoList = useSelector((state) => state.doneTodoList);\n\n  let optionsValues = useSelector(state => state.optionValue);\n  const showTodo = todoList.map(todoItem => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      title: todoItem.name,\n      index: todoList.indexOf(todoItem),\n      isComplete: todoItem.isComplete,\n      todoItem: todoItem\n    }, todoItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  });\n  let doneTodoList = todoList.filter(item => item.isComplete === true);\n  let showDoneTodo = doneTodoList.map(todoItem => {\n    return /*#__PURE__*/_jsxDEV(TodoItem, {\n      title: todoItem.name,\n      index: todoList.indexOf(todoItem),\n      isComplete: todoItem.isComplete,\n      todoItem: todoItem\n    }, todoItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: optionsValues === 1 ? showTodo : showDoneTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"6sc5Egg3z3VWa2jWIwCKuscZ7V0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/huy/Documents/todo-app---reactjs/todos/src/conponents/todo list/index.js"],"names":["React","useSelector","TodoItem","TodoList","todoList","state","optionsValues","optionValue","showTodo","map","todoItem","name","indexOf","isComplete","id","doneTodoList","filter","item","showDoneTodo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,gBAAP;AACA,OAAOC,QAAP,MAAqB,cAArB;;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB,QAAMC,QAAQ,GAAGH,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACD,QAAlB,CAA5B,CADkB,CAElB;;AACA,MAAIE,aAAa,GAAGL,WAAW,CAAEI,KAAD,IAAWA,KAAK,CAACE,WAAlB,CAA/B;AAEA,QAAMC,QAAQ,GAAGJ,QAAQ,CAACK,GAAT,CAAcC,QAAD,IAAc;AAC1C,wBACE,QAAC,QAAD;AAEE,MAAA,KAAK,EAAEA,QAAQ,CAACC,IAFlB;AAGE,MAAA,KAAK,EAAEP,QAAQ,CAACQ,OAAT,CAAiBF,QAAjB,CAHT;AAIE,MAAA,UAAU,EAAEA,QAAQ,CAACG,UAJvB;AAKE,MAAA,QAAQ,EAAEH;AALZ,OACOA,QAAQ,CAACI,EADhB;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVgB,CAAjB;AAYA,MAAIC,YAAY,GAAGX,QAAQ,CAACY,MAAT,CAAiBC,IAAD,IAAUA,IAAI,CAACJ,UAAL,KAAoB,IAA9C,CAAnB;AAEA,MAAIK,YAAY,GAAGH,YAAY,CAACN,GAAb,CAAkBC,QAAD,IAAc;AAChD,wBACE,QAAC,QAAD;AAEE,MAAA,KAAK,EAAEA,QAAQ,CAACC,IAFlB;AAGE,MAAA,KAAK,EAAEP,QAAQ,CAACQ,OAAT,CAAiBF,QAAjB,CAHT;AAIE,MAAA,UAAU,EAAEA,QAAQ,CAACG,UAJvB;AAKE,MAAA,QAAQ,EAAEH;AALZ,OACOA,QAAQ,CAACI,EADhB;AAAA;AAAA;AAAA;AAAA,YADF;AASD,GAVkB,CAAnB;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAEIR,aAAa,KAAK,CAAlB,GAAsBE,QAAtB,GAAiCU;AAFrC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAxCQf,Q;UACUF,W,EAEGA,W;;;KAHbE,Q;AA0CT,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./todolist.css\";\nimport TodoItem from \"../todo item\";\n\nfunction TodoList() {\n  const todoList = useSelector((state) => state.todoList);\n  // const doneTodoList = useSelector((state) => state.doneTodoList);\n  let optionsValues = useSelector((state) => state.optionValue);\n\n  const showTodo = todoList.map((todoItem) => {\n    return (\n      <TodoItem\n        key={todoItem.id}\n        title={todoItem.name}\n        index={todoList.indexOf(todoItem)}\n        isComplete={todoItem.isComplete}\n        todoItem={todoItem}\n      />\n    );\n  });\n\n  let doneTodoList = todoList.filter((item) => item.isComplete === true);\n\n  let showDoneTodo = doneTodoList.map((todoItem) => {\n    return (\n      <TodoItem\n        key={todoItem.id}\n        title={todoItem.name}\n        index={todoList.indexOf(todoItem)}\n        isComplete={todoItem.isComplete}\n        todoItem={todoItem}\n      />\n    );\n  });\n\n  return (\n    <div className=\"todo-list-wrapper\">\n      <ul className=\"todo-list\">\n        {\n          optionsValues === 1 ? showTodo : showDoneTodo\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}