{"version":3,"sources":["conponents/control/index.js","store/actions.js","conponents/todo item/index.js","conponents/todo list/index.js","conponents/options/index.js","App.js","store/rootReducer.js","store/store.js","index.js"],"names":["Control","dispatch","useDispatch","useState","name","isComplete","isDelete","todo","SetTodo","className","type","placeholder","value","onChange","evt","target","onClick","preventDefault","newTodo","id","Math","round","random","payload","AddNewTodo","aria-hidden","TodoItem","index","title","todoItem","classes","ClassNames","ToggleCompleteBtn","action","todoId","TodoList","todoList","useSelector","state","optionsValues","optionValue","showTodo","map","indexOf","showDoneTodo","filter","item","Options","Number","App","initState","doneTodoList","rootReducer","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d09781ca.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {useDispatch} from 'react-redux'\nimport {AddNewTodo} from '../../store/actions'\nimport \"./control.css\";\n\nfunction Control() {\n  const dispatch = useDispatch();\n\n  const [todo, SetTodo] = useState({\n    name: \"\",\n    isComplete: false,\n    isDelete: false,\n  });\n\n  const handleInputValue = (evt) => {\n    SetTodo(\n      {\n        ...todo,\n        name: evt.target.value\n      }\n    )\n  };\n\n  function checkVlad () {\n    if(todo.name === \"\")\n      return true;\n    return false\n  }\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const isValid = checkVlad();\n\n    if(isValid)\n      return;\n\n    const newTodo = {\n      id: Math.round(Math.random() * 9999),\n      ...todo\n    }\n\n    dispatch(AddNewTodo(newTodo));\n\n    SetTodo({\n      ...todo,\n      name: ''\n    })\n  };\n\n  return (\n    <div className=\"input-wrapper\" >\n      <input\n        type=\"text\"\n        className=\"input__input\"\n        placeholder=\"sign in ...\"\n        value={todo.name}\n        onChange={handleInputValue}\n      />\n      <div className=\"input__submit-btn\" type=\"submit\" onClick={handleSubmit}>\n        <i className=\"fa fa-plus\" aria-hidden=\"true\"></i>\n      </div>\n    </div>\n  );\n}\n\nexport default Control;\n","export const ADD_NEW_TODO = \"ADD_NEW_TODO\";\nexport const DELETE_TODO = \"DELETE_TODO\";\nexport const TOGGLE_COMPLETE_BTN = \"TOGGLE_COMPLETE_BTN\"\nexport const CHOOSE_OPTIONS_VALUE = \"CHOOSE_OPTIONS_VALUE\"\nexport const UPDATE_TODO = \"UPDATE_TODO\"\nexport function AddNewTodo(todo) {\n  return {\n    type: ADD_NEW_TODO,\n    payload: {\n      todo,\n    },\n  };\n}\n\nexport function DeleteTodo(todoId) {\n  return {\n    type: DELETE_TODO,\n    payload: {\n      todoId,\n    },\n  };\n}\n\nexport function ToggleCompleteBtn(todoItem) {\n  return {\n    type: TOGGLE_COMPLETE_BTN,\n    payload: {\n      todoItem,\n    },\n  };\n}\n\nexport function ChooseOptionsValue(value){\n  return {\n    type: CHOOSE_OPTIONS_VALUE,\n    payload: {\n      value,\n    }\n  }\n}\n\nexport function UpdateTodo(){\n  return{\n    type: UPDATE_TODO\n  }\n}\n","import React from \"react\";\nimport ClassNames from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { ToggleCompleteBtn, DeleteTodo, UpdateTodo } from \"../../store/actions\";\nimport \"./todoitem.css\";\n\nfunction TodoItem({ index, title, isComplete, todoItem }) {\n  const dispatch = useDispatch();\n\n  const classes = ClassNames(\"todo-item__name\", {\n    \"isComplete\": isComplete,\n  });\n\n  const toggleCompleteBtn = () => {\n    dispatch(ToggleCompleteBtn(todoItem));\n    dispatch(UpdateTodo());\n  };\n\n  const toggleDeleteBtn = () => {\n    let action = DeleteTodo(todoItem.id);\n    dispatch(action);\n  };\n\n  return (\n    <li className=\"todo-item\">\n      <div className=\"todo-item__id\">{index + 1}</div>\n      <div className={classes}>{title}</div>\n      <div className=\"todo-item__btn-wrapper\">\n        <div className=\"todo-item__btn-isComplete\" onClick={toggleCompleteBtn}>\n          <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\n        </div>\n        <div className=\"todo-item__btn-notComplete\" onClick={toggleDeleteBtn}>\n          <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./todolist.css\";\nimport TodoItem from \"../todo item\";\n\nfunction TodoList() {\n  const todoList = useSelector((state) => state.todoList);\n  // const doneTodoList = useSelector((state) => state.doneTodoList);\n  let optionsValues = useSelector((state) => state.optionValue);\n\n  const showTodo = todoList.map((todoItem) => {\n    return (\n      <TodoItem\n        key={todoItem.id}\n        title={todoItem.name}\n        index={todoList.indexOf(todoItem)}\n        isComplete={todoItem.isComplete}\n        todoItem={todoItem}\n      />\n    );\n  });\n\n  let doneTodoList = todoList.filter((item) => item.isComplete === true);\n\n  let showDoneTodo = doneTodoList.map((todoItem) => {\n    return (\n      <TodoItem\n        key={todoItem.id}\n        title={todoItem.name}\n        index={todoList.indexOf(todoItem)}\n        isComplete={todoItem.isComplete}\n        todoItem={todoItem}\n      />\n    );\n  });\n\n  return (\n    <div className=\"todo-list-wrapper\">\n      <ul className=\"todo-list\">\n        {\n          optionsValues === 1 ? showTodo : showDoneTodo\n        }\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport './option.css';\nimport {useDispatch} from \"react-redux\"\nimport {ChooseOptionsValue} from \"../../store/actions\"\n\nfunction Options() {\n  const dispatch = useDispatch();\n\n  const handleValueChange = (evt) => {\n    const action = ChooseOptionsValue(Number(evt.target.value));\n    dispatch(action);\n  }\n\n\n  return (\n    <div className=\"form-select-wrapper\">\n      <select className=\"form-select\" onChange={handleValueChange}>\n        <option className=\"form-select__item\" value={1}>All</option>\n        <option className=\"form-select__item\" value={2}>Done</option>\n      </select>\n    </div>\n  );\n}\n\nexport default Options;\n","import \"./App.css\";\nimport Control from \"./conponents/control\";\nimport TodoList from \"./conponents/todo list\";\nimport Options from \"./conponents/options/index\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Welcome to Todos App</h1>\n      <Control />\n      <Options />\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","const initState = {\n  todoList: [],\n  doneTodoList: [],\n  optionValue: 1,\n};\n\nfunction rootReducer(state = initState, action) {\n  switch (action.type) {\n    case \"ADD_NEW_TODO\":\n      return {\n        ...state,\n        todoList: [...state.todoList, action.payload.todo],\n      };\n\n    case \"TOGGLE_COMPLETE_BTN\":\n      return {\n        ...state,\n        todoList: state.todoList.map((item) => {\n          if (item.id === action.payload.todoItem.id) {\n            return {\n              ...item,\n              isComplete: !action.payload.todoItem.isComplete,\n            };\n          }\n          return item;\n        }),\n      };\n\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        todoList: state.todoList.filter(\n          (item) => item.id !== action.payload.todoId\n        ),\n        doneTodoList: state.todoList.filter(\n          (item) => item.id !== action.payload.todoId && item.isComplete === true\n        ),\n      };\n\n    case \"CHOOSE_OPTIONS_VALUE\":\n      return {\n        ...state,\n        optionValue: action.payload.value,\n      };\n\n    case \"UPDATE_TODO\":\n      return {\n        ...state,\n        doneTodoList: state.todoList.filter((item) => item.isComplete === true),\n      };\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n","import {createStore} from 'redux'\nimport rootReducer from './rootReducer'\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}